{"version":3,"sources":["Components/Navbar.js","Controllers/AndhraDataController.js","Controllers/Query.js","Components/useChartConfig.js","Components/data.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","sideDrawerOpen","drawerToggleClickHandler","setState","prevState","backdropClickHandler","backdrop","this","click","style","height","drawerClickHandler","show","marginTop","Component","Toolbar","props","className","href","to","SideDrawer","DrawerToggleButton","onClick","Backdrop","getAndhraDataWithoutHistorical","callback","a","request","catch","err","response","options","elementType","primaryAxisType","secondaryAxisType","primaryAxisPosition","secondaryAxisPosition","secondaryAxisStack","primaryAxisShow","secondaryAxisShow","grouping","tooltipAnchor","tooltipAlign","snapCursor","Object","keys","Home","componentDidMount","error","loading","districts","map","district","key","data-label","cases","active","recovered","deaths","schema","name","alternateName","url","App","Helmet","type","JSON","stringify","path","About","HomeRoute","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.51760064.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// import { IconName } from 'react-icons/fa';\n\nexport default class NavBar extends Component {\n  state = {\n    sideDrawerOpen: false,\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return { sideDrawerOpen: !prevState.sideDrawerOpen };\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false });\n  };\n\n  render() {\n    let backdrop;\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />;\n    }\n    return (\n      <div style={{ height: '100%' }}>\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n        <SideDrawer show={this.state.sideDrawerOpen} />\n        {backdrop}\n        <main style={{ marginTop: '64px' }}></main>\n      </div>\n    );\n  }\n}\n\nconst Toolbar = (props) => (\n  <header className=\"toolbar\">\n    <nav className=\"toolbar__navigation\">\n      <div className=\"toolbar__toggle-button\">\n        <DrawerToggleButton click={props.drawerClickHandler} />\n      </div>\n      <div className=\"toolbar__logo\">\n        <a href=\"/\">COVID-19</a>\n        <div className=\"title_caption\">Andhra Pradesh</div>\n      </div>\n      <div className=\"spacer\" />\n      <div className=\"toolbar_navigation-items\">\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          {/* <li>\n            <Link to=\"/users\">Users</Link>\n          </li> */}\n        </ul>\n      </div>\n    </nav>\n  </header>\n);\n\nconst SideDrawer = (props) => {\n  return (\n    <nav className={props.show ? 'side-drawer open' : 'side-drawer'}>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n        {/* <li>\n          <Link to=\"/users\">Users</Link>\n        </li> */}\n      </ul>\n    </nav>\n  );\n};\n\nconst DrawerToggleButton = (props) => (\n  <button className=\"toggle-button\" onClick={props.click}>\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n  </button>\n);\n\nconst Backdrop = (props) => <div className=\"backdrop\" onClick={props.click} />;\n","import axios from 'axios';\nimport { request } from 'graphql-request';\nimport {\n  graphQLendPoint,\n  andhraQuerywithHistorical14days,\n  andhraQuery,\n} from './Query';\n\n//sending data as error,response in callback\n\nexport const getAndhraDataWithHistorical14days = async (callback) => {\n  const response = await request(\n    graphQLendPoint,\n    andhraQuerywithHistorical14days,\n    {}\n  ).catch((err) => callback(err, null));\n  callback(null, response);\n};\n\nexport const getAndhraDataWithoutHistorical = async (callback) => {\n  const response = await request(\n    graphQLendPoint,\n    andhraQuery,\n    {}\n  ).catch((err) => callback(err, null));\n  callback(null, response);\n};\n","export const graphQLendPoint = 'https://covidstat.info/graphql';\n\nexport const andhraQuerywithHistorical = `query {\n    state(countryName: \"India\", stateName: \"Andhra Pradesh\") {\n      state\n      cases\n      deaths\n      historical {\n        date\n        cases\n        deaths\n        recovered\n      }\n      districts {\n        district\n        cases\n        active\n        deaths\n        recovered\n        todayCases\n        todayDeaths\n        todayRecovered\n        historical {\n          date\n          cases\n          deaths\n          recovered\n        }\n      }\n    }\n  }`;\n\nexport const andhraQuery = `query {\n    state(countryName: \"India\", stateName: \"Andhra Pradesh\") {\n      state\n      cases\n      deaths\n      districts {\n        district\n        cases\n        active\n        deaths\n        recovered\n        todayCases\n        todayDeaths\n        todayRecovered\n      }\n    }\n  }`;\n\nexport const andhraQuerywithHistorical14days = `query {\n    state(countryName: \"India\", stateName: \"Andhra Pradesh\") {\n      state\n      cases\n      deaths\n      historical {\n        date\n        cases\n        deaths\n        recovered\n      }\n      districts {\n        district\n        cases\n        active\n        deaths\n        recovered\n        todayCases\n        todayDeaths\n        todayRecovered\n        historical {\n          date\n          cases\n          deaths\n          recovered\n        }\n      }\n    }\n  }`;\n","import React from 'react';\n//\n\nconst options = {\n  elementType: ['line', 'area', 'bar', 'bubble'],\n  primaryAxisType: ['linear', 'time', 'log', 'ordinal'],\n  secondaryAxisType: ['linear', 'time', 'log', 'ordinal'],\n  primaryAxisPosition: ['top', 'left', 'right', 'bottom'],\n  secondaryAxisPosition: ['top', 'left', 'right', 'bottom'],\n  secondaryAxisStack: [true, false],\n  primaryAxisShow: [true, false],\n  secondaryAxisShow: [true, false],\n  grouping: ['single', 'series', 'primary', 'secondary'],\n  tooltipAnchor: [\n    'closest',\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'center',\n    'gridTop',\n    'gridBottom',\n    'gridLeft',\n    'gridRight',\n    'gridCenter',\n    'pointer',\n  ],\n  tooltipAlign: [\n    'auto',\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'topLeft',\n    'topRight',\n    'bottomLeft',\n    'bottomRight',\n    'center',\n  ],\n  snapCursor: [true, false],\n};\n\nconst optionKeys = Object.keys(options);\n\nexport default function useChartConfig({\n  series,\n  useR,\n  show = [],\n  count = 1,\n  resizable = true,\n  canRandomize = true,\n  dataType = 'time',\n  elementType = 'line',\n  primaryAxisType = 'time',\n  secondaryAxisType = 'linear',\n  primaryAxisPosition = 'bottom',\n  secondaryAxisPosition = 'left',\n  primaryAxisStack = false,\n  secondaryAxisStack = true,\n  primaryAxisShow = true,\n  secondaryAxisShow = true,\n  tooltipAnchor = 'closest',\n  tooltipAlign = 'auto',\n  grouping = 'primary',\n  snapCursor = true,\n  datums = 10,\n}) {\n  const [state, setState] = React.useState({\n    count,\n    resizable,\n    canRandomize,\n    dataType,\n    elementType,\n    primaryAxisType,\n    secondaryAxisType,\n    primaryAxisPosition,\n    secondaryAxisPosition,\n    primaryAxisStack,\n    secondaryAxisStack,\n    primaryAxisShow,\n    secondaryAxisShow,\n    tooltipAnchor,\n    tooltipAlign,\n    grouping,\n    snapCursor,\n    datums,\n    data: makeDataFrom(dataType, series, useR, datums),\n  });\n\n  React.useEffect(() => {\n    setState((old) => ({\n      ...old,\n      data: makeDataFrom(dataType, series, useR, datums),\n    }));\n  }, [count, dataType, datums, series, useR]);\n\n  const randomizeData = () =>\n    setState((old) => ({\n      ...old,\n      data: makeDataFrom(dataType, series, useR, datums),\n    }));\n\n  const Options = optionKeys\n    .filter((option) => show.indexOf(option) > -1)\n    .map((option) => (\n      <div key={option}>\n        {option}: &nbsp;\n        <select\n          value={state[option]}\n          onChange={({ target: { value } }) =>\n            setState((old) => ({\n              ...old,\n              [option]:\n                typeof options[option][0] === 'boolean'\n                  ? value === 'true'\n                  : value,\n            }))\n          }\n        >\n          {options[option].map((d) => (\n            <option value={d} key={d.toString()}>\n              {d.toString()}\n            </option>\n          ))}\n        </select>\n        <br />\n      </div>\n    ));\n\n  return {\n    ...state,\n    randomizeData,\n    Options,\n  };\n}\n\nfunction makeDataFrom(dataType, series, useR, datums) {\n  return [\n    ...new Array(series || Math.max(Math.round(Math.random() * 5), 1)),\n  ].map((d, i) => makeSeries(i, dataType, useR, datums));\n}\n\nfunction makeSeries(i, dataType, useR, datums) {\n  const start = 0;\n  const startDate = new Date();\n  startDate.setMinutes(0);\n  startDate.setSeconds(0);\n  startDate.setMilliseconds(0);\n  // const length = 5 + Math.round(Math.random() * 15)\n  const length = datums;\n  const min = 0;\n  const max = 100;\n  const rMin = 2;\n  const rMax = 20;\n  const nullChance = 0;\n  return {\n    label: `Series ${i + 1}`,\n    datums: [...new Array(length)].map((_, i) => {\n      let x = start + i;\n      if (dataType === 'ordinal') {\n        x = `Ordinal Group ${x}`;\n      }\n      if (dataType === 'time') {\n        x = new Date(startDate.getTime() + 60 * 1000 * 30 * i);\n      }\n      if (dataType === 'linear') {\n        x =\n          Math.random() < nullChance\n            ? null\n            : min + Math.round(Math.random() * (max - min));\n      }\n      const distribution = 1.1;\n      const y =\n        Math.random() < nullChance\n          ? null\n          : min + Math.round(Math.random() * (max - min));\n      const r = !useR\n        ? undefined\n        : rMax -\n          Math.floor(\n            Math.log(Math.random() * (distribution ** rMax - rMin) + rMin) /\n              Math.log(distribution)\n          );\n      return {\n        x,\n        y,\n        r,\n      };\n    }),\n  };\n}\n","export const mock14Days = {\n  state: 'Andhra Pradesh',\n  cases: 8452,\n  deaths: 101,\n  historical: [\n    {\n      date: '3/14/20',\n      cases: 1,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/15/20',\n      cases: 1,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/16/20',\n      cases: 1,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/17/20',\n      cases: 1,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/18/20',\n      cases: 1,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/19/20',\n      cases: 3,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/20/20',\n      cases: 3,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/21/20',\n      cases: 5,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/22/20',\n      cases: 6,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/23/20',\n      cases: 7,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/24/20',\n      cases: 8,\n      deaths: 0,\n      recovered: 0,\n    },\n    {\n      date: '3/25/20',\n      cases: 10,\n      deaths: 0,\n      recovered: 1,\n    },\n    {\n      date: '3/26/20',\n      cases: 11,\n      deaths: 0,\n      recovered: 1,\n    },\n    {\n      date: '3/27/20',\n      cases: 13,\n      deaths: 0,\n      recovered: 1,\n    },\n  ],\n  districts: [\n    {\n      district: 'Foreign Evacuees',\n      cases: 326,\n      active: 277,\n      deaths: 0,\n      recovered: 49,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '5/25/20',\n          cases: 62,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/26/20',\n          cases: 111,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/27/20',\n          cases: 111,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/28/20',\n          cases: 111,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/29/20',\n          cases: 111,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/30/20',\n          cases: 111,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/31/20',\n          cases: 111,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '6/1/20',\n          cases: 112,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '6/2/20',\n          cases: 112,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '6/3/20',\n          cases: 119,\n          deaths: 0,\n          recovered: 1,\n        },\n        {\n          date: '6/4/20',\n          cases: 119,\n          deaths: 0,\n          recovered: 4,\n        },\n        {\n          date: '6/5/20',\n          cases: 123,\n          deaths: 0,\n          recovered: 4,\n        },\n        {\n          date: '6/6/20',\n          cases: 131,\n          deaths: 0,\n          recovered: 4,\n        },\n        {\n          date: '6/7/20',\n          cases: 131,\n          deaths: 0,\n          recovered: 5,\n        },\n      ],\n    },\n    {\n      district: 'Anantapur',\n      cases: 789,\n      active: 553,\n      deaths: 6,\n      recovered: 230,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 36,\n          deaths: 3,\n          recovered: 2,\n        },\n        {\n          date: '4/22/20',\n          cases: 36,\n          deaths: 3,\n          recovered: 2,\n        },\n        {\n          date: '4/23/20',\n          cases: 42,\n          deaths: 3,\n          recovered: 7,\n        },\n        {\n          date: '4/24/20',\n          cases: 46,\n          deaths: 4,\n          recovered: 11,\n        },\n        {\n          date: '4/25/20',\n          cases: 51,\n          deaths: 4,\n          recovered: 13,\n        },\n        {\n          date: '4/26/20',\n          cases: 53,\n          deaths: 4,\n          recovered: 14,\n        },\n        {\n          date: '4/27/20',\n          cases: 53,\n          deaths: 4,\n          recovered: 14,\n        },\n        {\n          date: '4/28/20',\n          cases: 54,\n          deaths: 4,\n          recovered: 14,\n        },\n        {\n          date: '4/29/20',\n          cases: 58,\n          deaths: 4,\n          recovered: 17,\n        },\n        {\n          date: '4/30/20',\n          cases: 61,\n          deaths: 4,\n          recovered: 20,\n        },\n        {\n          date: '5/1/20',\n          cases: 67,\n          deaths: 4,\n          recovered: 22,\n        },\n        {\n          date: '5/2/20',\n          cases: 71,\n          deaths: 4,\n          recovered: 24,\n        },\n        {\n          date: '5/3/20',\n          cases: 78,\n          deaths: 4,\n          recovered: 24,\n        },\n        {\n          date: '5/4/20',\n          cases: 78,\n          deaths: 4,\n          recovered: 24,\n        },\n      ],\n    },\n    {\n      district: 'Chittoor',\n      cases: 515,\n      active: 242,\n      deaths: 5,\n      recovered: 268,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 53,\n          deaths: 0,\n          recovered: 4,\n        },\n        {\n          date: '4/22/20',\n          cases: 59,\n          deaths: 0,\n          recovered: 4,\n        },\n        {\n          date: '4/23/20',\n          cases: 73,\n          deaths: 0,\n          recovered: 11,\n        },\n        {\n          date: '4/24/20',\n          cases: 73,\n          deaths: 0,\n          recovered: 11,\n        },\n        {\n          date: '4/25/20',\n          cases: 73,\n          deaths: 0,\n          recovered: 11,\n        },\n        {\n          date: '4/26/20',\n          cases: 73,\n          deaths: 0,\n          recovered: 13,\n        },\n        {\n          date: '4/27/20',\n          cases: 73,\n          deaths: 0,\n          recovered: 16,\n        },\n        {\n          date: '4/28/20',\n          cases: 74,\n          deaths: 0,\n          recovered: 16,\n        },\n        {\n          date: '4/29/20',\n          cases: 77,\n          deaths: 0,\n          recovered: 16,\n        },\n        {\n          date: '4/30/20',\n          cases: 80,\n          deaths: 0,\n          recovered: 16,\n        },\n        {\n          date: '5/1/20',\n          cases: 80,\n          deaths: 0,\n          recovered: 22,\n        },\n        {\n          date: '5/2/20',\n          cases: 80,\n          deaths: 0,\n          recovered: 24,\n        },\n        {\n          date: '5/3/20',\n          cases: 81,\n          deaths: 0,\n          recovered: 37,\n        },\n        {\n          date: '5/4/20',\n          cases: 82,\n          deaths: 0,\n          recovered: 45,\n        },\n      ],\n    },\n    {\n      district: 'East Godavari',\n      cases: 485,\n      active: 213,\n      deaths: 5,\n      recovered: 267,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 26,\n          deaths: 0,\n          recovered: 8,\n        },\n        {\n          date: '4/22/20',\n          cases: 26,\n          deaths: 0,\n          recovered: 8,\n        },\n        {\n          date: '4/23/20',\n          cases: 32,\n          deaths: 0,\n          recovered: 8,\n        },\n        {\n          date: '4/24/20',\n          cases: 34,\n          deaths: 0,\n          recovered: 8,\n        },\n        {\n          date: '4/25/20',\n          cases: 37,\n          deaths: 0,\n          recovered: 12,\n        },\n        {\n          date: '4/26/20',\n          cases: 39,\n          deaths: 0,\n          recovered: 12,\n        },\n        {\n          date: '4/27/20',\n          cases: 39,\n          deaths: 0,\n          recovered: 12,\n        },\n        {\n          date: '4/28/20',\n          cases: 39,\n          deaths: 0,\n          recovered: 12,\n        },\n        {\n          date: '4/29/20',\n          cases: 40,\n          deaths: 0,\n          recovered: 12,\n        },\n        {\n          date: '4/30/20',\n          cases: 42,\n          deaths: 0,\n          recovered: 14,\n        },\n        {\n          date: '5/1/20',\n          cases: 42,\n          deaths: 0,\n          recovered: 17,\n        },\n        {\n          date: '5/2/20',\n          cases: 45,\n          deaths: 0,\n          recovered: 17,\n        },\n        {\n          date: '5/3/20',\n          cases: 45,\n          deaths: 0,\n          recovered: 20,\n        },\n        {\n          date: '5/4/20',\n          cases: 45,\n          deaths: 0,\n          recovered: 22,\n        },\n      ],\n    },\n    {\n      district: 'Guntur',\n      cases: 742,\n      active: 238,\n      deaths: 11,\n      recovered: 493,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 157,\n          deaths: 6,\n          recovered: 15,\n        },\n        {\n          date: '4/22/20',\n          cases: 177,\n          deaths: 6,\n          recovered: 15,\n        },\n        {\n          date: '4/23/20',\n          cases: 195,\n          deaths: 8,\n          recovered: 23,\n        },\n        {\n          date: '4/24/20',\n          cases: 206,\n          deaths: 8,\n          recovered: 23,\n        },\n        {\n          date: '4/25/20',\n          cases: 209,\n          deaths: 8,\n          recovered: 23,\n        },\n        {\n          date: '4/26/20',\n          cases: 214,\n          deaths: 8,\n          recovered: 29,\n        },\n        {\n          date: '4/27/20',\n          cases: 237,\n          deaths: 8,\n          recovered: 29,\n        },\n        {\n          date: '4/28/20',\n          cases: 254,\n          deaths: 8,\n          recovered: 39,\n        },\n        {\n          date: '4/29/20',\n          cases: 283,\n          deaths: 8,\n          recovered: 59,\n        },\n        {\n          date: '4/30/20',\n          cases: 287,\n          deaths: 8,\n          recovered: 87,\n        },\n        {\n          date: '5/1/20',\n          cases: 306,\n          deaths: 8,\n          recovered: 97,\n        },\n        {\n          date: '5/2/20',\n          cases: 308,\n          deaths: 8,\n          recovered: 97,\n        },\n        {\n          date: '5/3/20',\n          cases: 319,\n          deaths: 8,\n          recovered: 115,\n        },\n        {\n          date: '5/4/20',\n          cases: 338,\n          deaths: 8,\n          recovered: 115,\n        },\n      ],\n    },\n    {\n      district: 'Krishna',\n      cases: 982,\n      active: 521,\n      deaths: 33,\n      recovered: 428,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 83,\n          deaths: 6,\n          recovered: 14,\n        },\n        {\n          date: '4/22/20',\n          cases: 86,\n          deaths: 6,\n          recovered: 14,\n        },\n        {\n          date: '4/23/20',\n          cases: 88,\n          deaths: 7,\n          recovered: 25,\n        },\n        {\n          date: '4/24/20',\n          cases: 102,\n          deaths: 7,\n          recovered: 25,\n        },\n        {\n          date: '4/25/20',\n          cases: 127,\n          deaths: 8,\n          recovered: 29,\n        },\n        {\n          date: '4/26/20',\n          cases: 177,\n          deaths: 8,\n          recovered: 29,\n        },\n        {\n          date: '4/27/20',\n          cases: 210,\n          deaths: 8,\n          recovered: 29,\n        },\n        {\n          date: '4/28/20',\n          cases: 223,\n          deaths: 8,\n          recovered: 29,\n        },\n        {\n          date: '4/29/20',\n          cases: 236,\n          deaths: 8,\n          recovered: 32,\n        },\n        {\n          date: '4/30/20',\n          cases: 246,\n          deaths: 8,\n          recovered: 32,\n        },\n        {\n          date: '5/1/20',\n          cases: 246,\n          deaths: 8,\n          recovered: 37,\n        },\n        {\n          date: '5/2/20',\n          cases: 258,\n          deaths: 8,\n          recovered: 44,\n        },\n        {\n          date: '5/3/20',\n          cases: 266,\n          deaths: 8,\n          recovered: 46,\n        },\n        {\n          date: '5/4/20',\n          cases: 278,\n          deaths: 8,\n          recovered: 46,\n        },\n      ],\n    },\n    {\n      district: 'Kurnool',\n      cases: 1247,\n      active: 485,\n      deaths: 33,\n      recovered: 729,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 184,\n          deaths: 5,\n          recovered: 4,\n        },\n        {\n          date: '4/22/20',\n          cases: 203,\n          deaths: 5,\n          recovered: 4,\n        },\n        {\n          date: '4/23/20',\n          cases: 234,\n          deaths: 7,\n          recovered: 4,\n        },\n        {\n          date: '4/24/20',\n          cases: 261,\n          deaths: 8,\n          recovered: 4,\n        },\n        {\n          date: '4/25/20',\n          cases: 275,\n          deaths: 9,\n          recovered: 7,\n        },\n        {\n          date: '4/26/20',\n          cases: 279,\n          deaths: 9,\n          recovered: 31,\n        },\n        {\n          date: '4/27/20',\n          cases: 292,\n          deaths: 9,\n          recovered: 31,\n        },\n        {\n          date: '4/28/20',\n          cases: 332,\n          deaths: 9,\n          recovered: 43,\n        },\n        {\n          date: '4/29/20',\n          cases: 343,\n          deaths: 9,\n          recovered: 43,\n        },\n        {\n          date: '4/30/20',\n          cases: 386,\n          deaths: 9,\n          recovered: 43,\n        },\n        {\n          date: '5/1/20',\n          cases: 411,\n          deaths: 10,\n          recovered: 66,\n        },\n        {\n          date: '5/2/20',\n          cases: 436,\n          deaths: 10,\n          recovered: 66,\n        },\n        {\n          date: '5/3/20',\n          cases: 466,\n          deaths: 10,\n          recovered: 77,\n        },\n        {\n          date: '5/4/20',\n          cases: 491,\n          deaths: 10,\n          recovered: 86,\n        },\n      ],\n    },\n    {\n      district: 'Other State',\n      cases: 1506,\n      active: 647,\n      deaths: 0,\n      recovered: 859,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '5/5/20',\n          cases: 14,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/6/20',\n          cases: 27,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/7/20',\n          cases: 27,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/8/20',\n          cases: 27,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/9/20',\n          cases: 27,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/10/20',\n          cases: 27,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/11/20',\n          cases: 27,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/12/20',\n          cases: 27,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/13/20',\n          cases: 73,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/14/20',\n          cases: 105,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/15/20',\n          cases: 150,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/16/20',\n          cases: 150,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/17/20',\n          cases: 150,\n          deaths: 0,\n          recovered: 23,\n        },\n        {\n          date: '5/18/20',\n          cases: 150,\n          deaths: 0,\n          recovered: 25,\n        },\n      ],\n    },\n    {\n      district: 'Prakasam',\n      cases: 175,\n      active: 78,\n      deaths: 2,\n      recovered: 95,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 44,\n          deaths: 0,\n          recovered: 1,\n        },\n        {\n          date: '4/22/20',\n          cases: 48,\n          deaths: 0,\n          recovered: 1,\n        },\n        {\n          date: '4/23/20',\n          cases: 50,\n          deaths: 0,\n          recovered: 1,\n        },\n        {\n          date: '4/24/20',\n          cases: 53,\n          deaths: 0,\n          recovered: 1,\n        },\n        {\n          date: '4/25/20',\n          cases: 53,\n          deaths: 0,\n          recovered: 12,\n        },\n        {\n          date: '4/26/20',\n          cases: 56,\n          deaths: 0,\n          recovered: 23,\n        },\n        {\n          date: '4/27/20',\n          cases: 56,\n          deaths: 0,\n          recovered: 23,\n        },\n        {\n          date: '4/28/20',\n          cases: 56,\n          deaths: 0,\n          recovered: 23,\n        },\n        {\n          date: '4/29/20',\n          cases: 60,\n          deaths: 0,\n          recovered: 23,\n        },\n        {\n          date: '4/30/20',\n          cases: 60,\n          deaths: 0,\n          recovered: 23,\n        },\n        {\n          date: '5/1/20',\n          cases: 60,\n          deaths: 0,\n          recovered: 23,\n        },\n        {\n          date: '5/2/20',\n          cases: 61,\n          deaths: 0,\n          recovered: 42,\n        },\n        {\n          date: '5/3/20',\n          cases: 61,\n          deaths: 0,\n          recovered: 42,\n        },\n        {\n          date: '5/4/20',\n          cases: 61,\n          deaths: 0,\n          recovered: 50,\n        },\n      ],\n    },\n    {\n      district: 'S.P.S. Nellore',\n      cases: 459,\n      active: 213,\n      deaths: 4,\n      recovered: 242,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 68,\n          deaths: 2,\n          recovered: 2,\n        },\n        {\n          date: '4/22/20',\n          cases: 67,\n          deaths: 2,\n          recovered: 2,\n        },\n        {\n          date: '4/23/20',\n          cases: 67,\n          deaths: 2,\n          recovered: 6,\n        },\n        {\n          date: '4/24/20',\n          cases: 68,\n          deaths: 2,\n          recovered: 6,\n        },\n        {\n          date: '4/25/20',\n          cases: 72,\n          deaths: 2,\n          recovered: 8,\n        },\n        {\n          date: '4/26/20',\n          cases: 72,\n          deaths: 2,\n          recovered: 23,\n        },\n        {\n          date: '4/27/20',\n          cases: 79,\n          deaths: 2,\n          recovered: 23,\n        },\n        {\n          date: '4/28/20',\n          cases: 82,\n          deaths: 2,\n          recovered: 24,\n        },\n        {\n          date: '4/29/20',\n          cases: 82,\n          deaths: 2,\n          recovered: 27,\n        },\n        {\n          date: '4/30/20',\n          cases: 84,\n          deaths: 2,\n          recovered: 27,\n        },\n        {\n          date: '5/1/20',\n          cases: 84,\n          deaths: 3,\n          recovered: 43,\n        },\n        {\n          date: '5/2/20',\n          cases: 90,\n          deaths: 3,\n          recovered: 44,\n        },\n        {\n          date: '5/3/20',\n          cases: 91,\n          deaths: 3,\n          recovered: 44,\n        },\n        {\n          date: '5/4/20',\n          cases: 91,\n          deaths: 3,\n          recovered: 50,\n        },\n      ],\n    },\n    {\n      district: 'Srikakulam',\n      cases: 59,\n      active: 36,\n      deaths: 1,\n      recovered: 22,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/25/20',\n          cases: 3,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '4/26/20',\n          cases: 3,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '4/27/20',\n          cases: 4,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '4/28/20',\n          cases: 4,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '4/29/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '4/30/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/1/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/2/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/3/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/4/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/5/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/6/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/7/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/8/20',\n          cases: 5,\n          deaths: 0,\n          recovered: 0,\n        },\n      ],\n    },\n    {\n      district: 'Visakhapatnam',\n      cases: 261,\n      active: 109,\n      deaths: 1,\n      recovered: 151,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 21,\n          deaths: 0,\n          recovered: 18,\n        },\n        {\n          date: '4/22/20',\n          cases: 21,\n          deaths: 0,\n          recovered: 18,\n        },\n        {\n          date: '4/23/20',\n          cases: 22,\n          deaths: 0,\n          recovered: 19,\n        },\n        {\n          date: '4/24/20',\n          cases: 22,\n          deaths: 0,\n          recovered: 19,\n        },\n        {\n          date: '4/25/20',\n          cases: 22,\n          deaths: 0,\n          recovered: 19,\n        },\n        {\n          date: '4/26/20',\n          cases: 22,\n          deaths: 0,\n          recovered: 19,\n        },\n        {\n          date: '4/27/20',\n          cases: 22,\n          deaths: 0,\n          recovered: 19,\n        },\n        {\n          date: '4/28/20',\n          cases: 22,\n          deaths: 0,\n          recovered: 19,\n        },\n        {\n          date: '4/29/20',\n          cases: 23,\n          deaths: 0,\n          recovered: 19,\n        },\n        {\n          date: '4/30/20',\n          cases: 23,\n          deaths: 0,\n          recovered: 20,\n        },\n        {\n          date: '5/1/20',\n          cases: 25,\n          deaths: 0,\n          recovered: 20,\n        },\n        {\n          date: '5/2/20',\n          cases: 29,\n          deaths: 0,\n          recovered: 20,\n        },\n        {\n          date: '5/3/20',\n          cases: 29,\n          deaths: 0,\n          recovered: 20,\n        },\n        {\n          date: '5/4/20',\n          cases: 35,\n          deaths: 0,\n          recovered: 20,\n        },\n      ],\n    },\n    {\n      district: 'Vizianagaram',\n      cases: 78,\n      active: 47,\n      deaths: 0,\n      recovered: 31,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '5/7/20',\n          cases: 3,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/8/20',\n          cases: 4,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/9/20',\n          cases: 4,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/10/20',\n          cases: 4,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/11/20',\n          cases: 4,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/12/20',\n          cases: 4,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/13/20',\n          cases: 4,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/14/20',\n          cases: 4,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/15/20',\n          cases: 7,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/16/20',\n          cases: 7,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/17/20',\n          cases: 7,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/18/20',\n          cases: 8,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/19/20',\n          cases: 8,\n          deaths: 0,\n          recovered: 0,\n        },\n        {\n          date: '5/20/20',\n          cases: 16,\n          deaths: 0,\n          recovered: 4,\n        },\n      ],\n    },\n    {\n      district: 'West Godavari',\n      cases: 498,\n      active: 393,\n      deaths: 0,\n      recovered: 105,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '4/21/20',\n          cases: 39,\n          deaths: 0,\n          recovered: 9,\n        },\n        {\n          date: '4/22/20',\n          cases: 39,\n          deaths: 0,\n          recovered: 9,\n        },\n        {\n          date: '4/23/20',\n          cases: 39,\n          deaths: 0,\n          recovered: 9,\n        },\n        {\n          date: '4/24/20',\n          cases: 39,\n          deaths: 0,\n          recovered: 9,\n        },\n        {\n          date: '4/25/20',\n          cases: 39,\n          deaths: 0,\n          recovered: 9,\n        },\n        {\n          date: '4/26/20',\n          cases: 51,\n          deaths: 0,\n          recovered: 10,\n        },\n        {\n          date: '4/27/20',\n          cases: 54,\n          deaths: 0,\n          recovered: 11,\n        },\n        {\n          date: '4/28/20',\n          cases: 54,\n          deaths: 0,\n          recovered: 11,\n        },\n        {\n          date: '4/29/20',\n          cases: 56,\n          deaths: 0,\n          recovered: 11,\n        },\n        {\n          date: '4/30/20',\n          cases: 56,\n          deaths: 0,\n          recovered: 11,\n        },\n        {\n          date: '5/1/20',\n          cases: 58,\n          deaths: 0,\n          recovered: 19,\n        },\n        {\n          date: '5/2/20',\n          cases: 59,\n          deaths: 0,\n          recovered: 26,\n        },\n        {\n          date: '5/3/20',\n          cases: 59,\n          deaths: 0,\n          recovered: 26,\n        },\n        {\n          date: '5/4/20',\n          cases: 59,\n          deaths: 0,\n          recovered: 29,\n        },\n      ],\n    },\n    {\n      district: 'Y.S.R. Kadapa',\n      cases: 330,\n      active: 188,\n      deaths: 0,\n      recovered: 142,\n      todayCases: 0,\n      todayDeaths: 0,\n      todayRecovered: 0,\n      historical: [\n        {\n          date: '5/3/20',\n          cases: 83,\n          deaths: 0,\n          recovered: 37,\n        },\n        {\n          date: '5/4/20',\n          cases: 87,\n          deaths: 0,\n          recovered: 37,\n        },\n        {\n          date: '5/5/20',\n          cases: 89,\n          deaths: 0,\n          recovered: 39,\n        },\n        {\n          date: '5/6/20',\n          cases: 90,\n          deaths: 0,\n          recovered: 40,\n        },\n        {\n          date: '5/7/20',\n          cases: 96,\n          deaths: 0,\n          recovered: 40,\n        },\n        {\n          date: '5/8/20',\n          cases: 96,\n          deaths: 0,\n          recovered: 43,\n        },\n        {\n          date: '5/9/20',\n          cases: 96,\n          deaths: 0,\n          recovered: 43,\n        },\n        {\n          date: '5/10/20',\n          cases: 97,\n          deaths: 0,\n          recovered: 43,\n        },\n        {\n          date: '5/11/20',\n          cases: 97,\n          deaths: 0,\n          recovered: 45,\n        },\n        {\n          date: '5/12/20',\n          cases: 97,\n          deaths: 0,\n          recovered: 46,\n        },\n        {\n          date: '5/13/20',\n          cases: 97,\n          deaths: 0,\n          recovered: 56,\n        },\n        {\n          date: '5/14/20',\n          cases: 99,\n          deaths: 0,\n          recovered: 56,\n        },\n        {\n          date: '5/15/20',\n          cases: 101,\n          deaths: 0,\n          recovered: 63,\n        },\n        {\n          date: '5/16/20',\n          cases: 102,\n          deaths: 0,\n          recovered: 65,\n        },\n      ],\n    },\n  ],\n};\n","import React, { Component } from 'react';\nimport { getAndhraDataWithoutHistorical } from '../Controllers/AndhraDataController';\nimport SyncedCursors from './Charts';\nimport { mock14Days } from './data';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      error: null,\n      response: null,\n    };\n  }\n\n  componentDidMount = () => {\n    // this.setState({\n    //   error: null,\n    //   response: mock14Days,\n    //   loading: false,\n    // });\n    getAndhraDataWithoutHistorical((error, response) => {\n      this.setState({\n        error,\n        response: response.state,\n        loading: false,\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.state.loading && this.state.response && (\n          <div>\n            <table className=\"responsive-table\">\n              <thead>\n                <tr>\n                  <th>District</th>\n                  <th>Total</th>\n                  <th>Active</th>\n                  <th>Recovered</th>\n                  <th>Deaths</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.response.districts.map((district) => {\n                  return (\n                    <tr key={district.district}>\n                      <td data-label={'District'}>{district.district}</td>\n                      <td data-label={'Total'}>{district.cases}</td>\n                      <td data-label={'Active'}>{district.active}</td>\n                      <td data-label={'Recovered'}>{district.recovered}</td>\n                      <td data-label={'Deaths'}>{district.deaths}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            {/* <SyncedCursors cursorData={this.state.response} /> */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport NavBar from './Components/Navbar';\nimport Home from './Components/Home';\n\nconst schema = {\n  '@context': 'http://schema.org/',\n  name: 'Coronavirus Outbreak in Andhra',\n  alternateName: 'COVID-19 Andhra Tracker',\n  url: 'https://www.covidandhra.com/',\n};\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\n      </Helmet>\n      <Router>\n        <div>\n          <NavBar />\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            {/* <Route path=\"/users\">\n              <Users />\n            </Route> */}\n            <Route path=\"/\">\n              <HomeRoute />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nfunction HomeRoute() {\n  return <Home></Home>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}